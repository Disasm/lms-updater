name: Check for updates
on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"

jobs:
  check-for-updates:
    name: "Check for updates"
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check.outputs.skip }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Version check
        id: "check"
        run: ./check.sh

  update:
    name: "Update AUR package"
    runs-on: ubuntu-latest
    needs: check-for-updates
    if : ${{ needs.check-for-updates.outputs.skip == 'false' }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Build docker image
        run: docker build -t archlinux-build .
      - name: Checkout AUR sources
        run: |
          echo "${{ secrets.SSH_KEY }}" > id_rsa
          chmod 400 id_rsa
          export GIT_SSH_COMMAND="/usr/bin/ssh -i $(pwd)/id_rsa -o StrictHostKeyChecking=yes -o CheckHostIP=no -o UserKnownHostsFile=$(pwd)/known_hosts"
          mkdir lms
          cd lms
          git init $(pwd)
          git config user.name 'Vadim Kaushan (GutHub Actions)'
          git config user.email 'admin@disasm.info'
          git remote add origin ssh://aur@aur.archlinux.org/lms.git
          git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin master
          git checkout --progress --force -B master refs/remotes/origin/master
      - name: Update AUR package manifest
        run: |
          mkdir -p work
          cp lms/* work/
          chmod -R a+w work
          docker run --rm -v "$(pwd)/work:/work" -u 1000:1000 archlinux-build /update_version.sh ${{ needs.check-for-updates.outputs.version }} || exit 1
          cp "work/PKGBUILD" "work/.SRCINFO" lms/
          cd lms
          git diff
          # Sanity check: check that version was updated
          s=$(git diff)
          if [ -z "$s" ]; then
            echo "AUR package is already updated"
            exit 1
          fi
          git add -u
          git commit -m "Update to ${{ needs.check-for-updates.outputs.version }}"
      - name: Build new version
        run: |
          docker run --rm -v "$(pwd)/work:/work" -u 1000:1000 archlinux-build /build.sh || exit 1
          PKG=$(find "work" -name "lms-[0-9]*.pkg.tar.*")
          if [ -f "$PKG" ]; then
            echo "Package: $PKG"
          else
            echo "Package not found"
            exit 1
          fi
      - name: Push changes to AUR
        run: |
          export GIT_SSH_COMMAND="/usr/bin/ssh -i $(pwd)/id_rsa -o StrictHostKeyChecking=yes -o CheckHostIP=no -o UserKnownHostsFile=$(pwd)/known_hosts"
          cd lms
          git push origin master
      - name: Remove SSH key
        if: always()
        run: rm -f id_rsa
